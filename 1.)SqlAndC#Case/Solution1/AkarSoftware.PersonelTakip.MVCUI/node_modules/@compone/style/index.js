const scope = require('cssscope')
    , hash  = require('djbx')
    , sel = s => document.querySelector(s)

module.exports = function(node, styles, hashed = hash(styles), name = hashed){
  let style = sel(`style[name="${name}"]`)
  if (!style) {
    style = document.createElement('style')
    style.setAttribute('name', name)
    document.head.appendChild(style)
  }

  if (style.hash != hashed) {
    style.innerHTML = scope(styles, `[stylesheet~="${name}"]`)
    style.hash = hashed
  }

  node.css = node.css || {}
  node.css[name] = 1
  node.setAttribute('stylesheet', Object.keys(node.css).join(' '))
  node.on('disconnected.css', () => {
    if (!sel(`[stylesheet~="${name}"]`) && sel(`style[name="${name}"]`))
      sel(`style[name="${name}"]`).remove()
  })
}